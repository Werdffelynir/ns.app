#!/usr/local/bin/php
<?php
    print "Сейчас что-то случится.\n";

    /*$com = [
        'host' => ['type'=>'cmd','value'=>null,'index'=>null],
        'create' => ['type'=>'cmd','value'=>null,'index'=>null],
        'host' => ['type'=>'cmd','value'=>null,'index'=>null],
        'host' => ['type'=>'cmd','value'=>null,'index'=>null],
        'host' => ['type'=>'cmd','value'=>null,'index'=>null],
        'host' => [
            'type'=>'cmd',
            'value'=>null,
            'index'=>null
        ],
        'git'  => ['type'=>'cmd','value'=>null,'index'=>null],
    ];*/
    $comMask = [
        0 => ['type'=>'---','value'=>null],
        1 => ['type'=>'cmd','value'=>null],  // host
        2 => ['type'=>'prm','value'=>null],  // create
        3 => ['type'=>'opt1','value'=>null], // 
        4 => ['type'=>'opt2','value'=>null],
        5 => ['type'=>'opt3','value'=>null],
        6 => ['type'=>'opt4','value'=>null],
    ];
    $com = [];

    $comParse = function ($id, $value) use ($com, $comMask) {
        if(!empty($comMask[$id])) {
            $name = $comMask[$id];
            $com[$name] = $value;
        }
    };

    $currentComand = null;
    for ($index = 0; $index <= $argc -1; ++$index) {
        $value = $argv[$i];
        //  && !empty($com[$value])
        if($index == 1){
            $currentComand = $com['name'] = $value;
        }else if($index > 1 && in_array(needle, haystack)) {
            $com['name']
        }

        //$comMask[$i][2] = $argv[$i];
        //print "$i: $argv[$i]\n";
        //print_r($i . ' >>> ' . $argv[$i] . "\n");
        //$comParse($i, $argv[$i]);
    }

    // print "Отправленна комманда: \n";
    // print "\n";
print_r($comMask);
    

    //try{}catch($error){}

    /*switch ($com['command']) {
    	case 'git':
    		# code...
    		break;

    	case 'host':
    		
    		// php sapi host /var/www/opapa.loc apatch.restart
    		if($com['opt'] == 'create') {
                print "Создание нового локаьлного хоста.\n";
                print "Будет создан host: \n";
                print "Подтвердите действие [Y/N]\n";
    		}

    		break;
    	
    	default:
    		# code...
    		break;
    }*/






  









?>